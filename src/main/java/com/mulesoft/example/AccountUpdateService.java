package com.mulesoft.example;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2012-10-24T10:33:15.909-07:00
 * Generated source version: 2.5.1
 * 
 */
@WebServiceClient(name = "AccountUpdateService", 
                  wsdlLocation = "file:./src/main/resources/AccountUpdate.wsdl",
                  targetNamespace = "http://examples.mulesoft.com/") 
public class AccountUpdateService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://examples.mulesoft.com/", "AccountUpdateService");
    public final static QName AccountUpdatePort = new QName("http://examples.mulesoft.com/", "AccountUpdatePort");
    static {
        URL url = null;
        try {
            url = new URL("file:./src/main/resources/AccountUpdate.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AccountUpdateService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:./src/main/resources/AccountUpdate.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AccountUpdateService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AccountUpdateService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AccountUpdateService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AccountUpdate
     */
    @WebEndpoint(name = "AccountUpdatePort")
    public AccountUpdate getAccountUpdatePort() {
        return super.getPort(AccountUpdatePort, AccountUpdate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AccountUpdate
     */
    @WebEndpoint(name = "AccountUpdatePort")
    public AccountUpdate getAccountUpdatePort(WebServiceFeature... features) {
        return super.getPort(AccountUpdatePort, AccountUpdate.class, features);
    }

}
